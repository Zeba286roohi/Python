	================================================
	Numpy---Indexing and Slicing Operations of 1D,2D and 3D array
	================================================
------------------------------------
1D Arrays Slicing:
------------------------------------
Syntax:-   1dndrrayobj[begin:end:step]
-----------------------
Examples:
-----------------------
>>> a=np.array([10,20,30,40,50,60,70])
>>> a------------array([10, 20, 30, 40, 50, 60, 70])
>>> a[::-1]-----------array([70, 60, 50, 40, 30, 20, 10])
>>> a[::]-----------array([10, 20, 30, 40, 50, 60, 70])
------------------------------------
2D Arrays Slicing:
------------------------------------
Syntax:- ndrrayobj[i,j]
	here 'i' represents  Row Index
	here 'j' represents Column Index

Syntax:-       2dndrrayobj[slice1, slice2]
	
Syntax:-       2dndrrayobj[begin:end:step, begin:end:step]

--------------------------------------------------------------------
Examples:
--------------------------------------------------------------------
>>> a=np.array([[10,20,30],[40,50,60]])
>>> a
array([[10, 20, 30],
       [40, 50, 60]])
>>> a[0,0]
10
>>> a[0:,0:1]
array([[10],
       [40]])
>>> a[0:,1:2]
array([[20],
       [50]])
>>> a[1:,:]
array([[40, 50, 60]])
===============================================================
3D Arrays Slicing
-----------------------------
Syntax:-       3dndrrayobj[i,j,k]

	here 'i' represents Which 2D matrix ( Matrix Number-->0 1 2 3 4 5...... )
	here 'j' represents which Rows in that 2D matrix 
	here 'k' represents which Columns in that 2D matrix 
				(OR)
Syntax:-       3dndrrayobj[slice1, slice2, slice3 ]
				(OR)
Syntax:-       3dndrrayobj[begin:end:step, begin:end:step, begin:end:step ]
----------------------
Examples:
----------------------
>>> lst=[ [ [1,2,3],[4,5,6],[7,8,9] ],[ [13,14,15],[16,17,18],[19,20,21] ] ]
>>> print(lst)
[[[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[13, 14, 15], [16, 17, 18], [19, 20, 21]]]
>>> arr2=np.array(lst)
>>> print(arr2)
[[[ 1  2  3]
  [ 4  5  6]
  [ 7  8  9]]

 [[13 14 15]
  [16 17 18]
  [19 20 21]]]
>>> arr2.ndim
3
>>> arr2.shape
(2, 3, 3)
>>> arr2[:,:,0:1]
array([[[ 1],
        [ 4],
        [ 7]],

       [[13],
        [16],
        [19]]])
>>> arr2[:,:,:1]
array([[[ 1],
        [ 4],
        [ 7]],

       [[13],
        [16],
        [19]]])
>>> arr2[: , 0:2, 1:3]
array([[[ 2,  3],
        [ 5,  6]],

       [[14, 15],
        [17, 18]]])
>>> arr2[: , :2, 1:]
array([[[ 2,  3],
        [ 5,  6]],

       [[14, 15],
        [17, 18]]])
-------------------------------------------------------------------------------------