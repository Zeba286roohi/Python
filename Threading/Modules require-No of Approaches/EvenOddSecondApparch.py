#EvenOddSecondApparch.py-------OOPs Approach with Inheritance
import threading
import time
class EvenNumber(threading.Thread):
	def  setnumber(self,n):
		self.n=n
	def   run(self):
		print("="*50)
		tn=threading.current_thread().name
		if(self.n<=0):
			print("{} is invalid input:".format(self.n))
		else:
			for i in range(2,self.n+1,2):
				print("\tEven Number generated by {}={}".format(tn,i))
				time.sleep(1)
		print("="*50)

class OddNumber(threading.Thread):
	def  setnumber(self,n):
		self.n=n
	def   run(self):
		print("="*50)
		tn=threading.current_thread().name
		if(self.n<=0):
			print("{} is invalid input:".format(self.n))
		else:
			for i in range(1,self.n+1,2):
				print("\tOdd Number generated by {}={}".format(tn,i))
				time.sleep(1)
		print("="*50)

#main program
#create two sub threads
ent=EvenNumber()
ont=OddNumber()
#set the value for sub threads
ent.setnumber(50)
ont.setnumber(50)
#dipatch the threads
ont.start()
ent.start()

