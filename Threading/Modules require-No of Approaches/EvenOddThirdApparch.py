#EvenOddThirdApparch.py-------OOPs Approach without Inheritance
import threading
import time
class EvenNumber:
	def   evennums(self,n):
		print("="*50)
		tn=threading.current_thread().name
		if(n<=0):
			print("{} is invalid input:".format(n))
		else:
			for i in range(2,n+1,2):
				print("\tEven Number generated by {}={}".format(tn,i))
				time.sleep(1)
		print("="*50)

class OddNumber:
	def   oddnums(self,n):
		print("="*50)
		tn=threading.current_thread().name
		if(n<=0):
			print("{} is invalid input:".format(n))
		else:
			for i in range(1,n+1,2):
				print("\tOdd Number generated by {}={}".format(tn,i))
				time.sleep(1)
		print("="*50)

#main program
otn=OddNumber()
ent=EvenNumber()
#create sub threads
st1=threading.Thread(target=otn.oddnums,args=((40,)) )
st2=threading.Thread(target=ent.evennums,args=((40,)) )
#dispatch the threads
st1.start()
st2.start()
