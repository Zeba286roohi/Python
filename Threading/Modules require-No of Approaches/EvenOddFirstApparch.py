#EvenOddFirstApparch.py-------Functional Approach
import time,threading
def evennumbers(n):
	print("="*50)
	tn=threading.current_thread().name
	#print("Name of Sub Thread={}".format(tn))
	if(n<=0):
		print("{} is invalid input:".format(n))
	else:
		for i in range(2,n+1,2):
			print("\tEven Number generated by {}={}".format(tn,i))
			time.sleep(1)
	print("="*50)
	
def oddnumbers(n):
	print("="*50)
	tname=threading.current_thread().name
	#print("Name of Sub Thread={}".format(tname))
	if(n<=0):
		print("{} is invalid input:".format(n))
	else:
		for i in range(1,n+1,2):
			print("\tOdd Number generated by {} ={}".format(tname,i))
			time.sleep(1)
	print("="*50)

#main program
ont=threading.Thread(target=oddnumbers,args=((50,)) ) # Creating sub thread-1
ent=threading.Thread(target=evennumbers,args=((50,)) ) # Creating sub thread-2
#displatch the sub threads
ont.start()
ent.start()
	